// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model User {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  password   String      @db.VarChar(500)
  profilePic String?     @db.VarChar(500)
  albumLists AlbumList[]
  sessions   Session[]
}

model AlbumList {
  id        Int      @id @default(autoincrement())
  albumName String
  createdAt DateTime @default(now())
  albums    Album[]
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([albumName, userId])
}

model Album {
  id            Int       @id @default(autoincrement())
  imgName       String
  imagePublicId String    @unique @db.VarChar(300)
  imageUrl      String    @unique @db.VarChar(500)
  uploadedAt    DateTime  @default(now())
  albumListId   Int
  albumList     AlbumList @relation(fields: [albumListId], references: [id], onDelete: Cascade)
}

model Session {
  id      Int      @id @default(autoincrement())
  token   String   @unique
  expires DateTime
  userId  Int
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
